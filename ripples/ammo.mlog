# linked to turrets
set unitType @flare
set ammoType @plastanium
getlink CenterTurret 1
print "edit above of here"
jump generate_flag notEqual f 0
    op mul f @thisy @mapw
    op add f f @thisx
generate_flag:
    sensor tf u1 @flag
    sensor th u1 @health
    set broken 0
    jump new_flare notEqual tf f
    jump new_flare lessThan th 0
    sensor tf u2 @flag
    sensor th u2 @health
    set broken 1
    jump new_flare notEqual tf f
    jump new_flare lessThan th 0
    sensor tf u3 @flag
    sensor th u3 @health
    set broken 2
    jump new_flare notEqual tf f
    jump new_flare lessThan th 0
    sensor tf u4 @flag
    sensor th u4 @health
    set broken 3
    jump new_flare notEqual tf f
    jump new_flare lessThan th 0
    sensor th u5 @health
    sensor tf u5 @flag
    set broken 4
    jump new_flare notEqual tf f
    jump new_flare lessThan th 0
    sensor th u6 @health
    sensor tf u6 @flag
    set broken 5
    jump new_flare notEqual tf f
    jump new_flare lessThan th 0
    jump keep_flare always tf f
new_flare:
    ubind unitType
    sensor ff @unit @flag
    jump new_flare notEqual ff 0
    ucontrol flag f
op mul j broken 2
op add @counter @counter j
set u1 @unit
jump keep_flare always x false
set u2 @unit
jump keep_flare always x false
set u3 @unit
jump keep_flare always x false
set u4 @unit
jump keep_flare always x false
set u5 @unit
jump keep_flare always x false
set u6 @unit
jump keep_flare always x false
keep_flare:
    set i -4
main_loop:
    op add i i 4
    op add @counter @counter i
    ubind u1
    getlink b 0
    ucontrol itemDrop b 100
    jump bound always x false
    ubind u2
    getlink b 1
    ucontrol itemDrop b 100
    jump bound always x false
    ubind u3
    getlink b 2
    ucontrol itemDrop b 100
    jump bound always x false
    ubind u4
    getlink b 3
    ucontrol itemDrop b 100
    jump bound always x false
    ubind u5
    getlink b 4
    ucontrol itemDrop b 100
    jump bound always x false
    ubind u6
    getlink b 5
    ucontrol itemDrop b 100
    jump bound always x false
    end
    bound:
        sensor fi @unit @firstItem
            jump drop equal fi ammoType
            resupply:
            ulocate building core 0 @copper x y 0 b
            ucontrol move x y
            jump skip_drop equal fi null
                ucontrol itemDrop b 100
                ucontrol itemDrop @air 100
            skip_drop:
            ucontrol itemTake b ammoType 100
            jump main_loop always i p
        drop:
        jump skip_coord equal CenterTurret null
            sensor x CenterTurret @x
            sensor y CenterTurret @y
            jump coord always x false
        skip_coord:
            set x @thisx
            set y @thisy
        coord:
        ucontrol move x y
        set l -1
        drop_loop:
            op add l l 1
            getlink rip l
            ucontrol itemDrop rip 100
            jump drop_loop lessThan l @links
        sensor fi @unit @firstItem
        jump resupply notEqual fi ammoType
    jump main_loop always i p
set Author "Gewi"
